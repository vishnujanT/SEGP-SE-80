{"ast":null,"code":"var _jsxFileName = \"D:\\\\React programs\\\\demo\\\\src\\\\DragDropFiles.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport \"./DROPFILE.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DragDropFiles = () => {\n  _s();\n  const [files, setFiles] = useState(null);\n  const inputRef = useRef();\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    setFiles(event.dataTransfer.files);\n  };\n  const handleFileChange = event => {\n    setFiles(event.target.files);\n  };\n  const handleUpload = () => {\n    if (files) {\n      const formData = new FormData();\n      for (let i = 0; i < files.length; i++) {\n        formData.append(\"Files\", files[i]);\n      }\n\n      // Replace \"YOUR_SERVER_ENDPOINT\" with your actual server endpoint\n      fetch(\"YOUR_SERVER_ENDPOINT\", {\n        method: \"POST\",\n        body: formData\n      }).then(response => response.json()).then(data => {\n        console.log(\"Upload successful:\", data);\n        // Handle any further actions after successful upload\n      }).catch(error => {\n        console.error(\"Error uploading files:\", error);\n        // Handle errors during upload\n      });\n    }\n  };\n  if (files) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploads\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Array.from(files).map((file, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: file.name\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFiles(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpload,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropzone\",\n      onDragOver: handleDragOver,\n      onDrop: handleDrop,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Drag and Drop Files to Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        onChange: handleFileChange,\n        hidden: true,\n        accept: \"image/png, image/jpeg\",\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => inputRef.current.click(),\n        children: \"Select Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(DragDropFiles, \"n51ndAaOr5Kkr1g11YkIW3O/EbA=\");\n_c = DragDropFiles;\nexport default DragDropFiles;\nvar _c;\n$RefreshReg$(_c, \"DragDropFiles\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","DragDropFiles","_s","files","setFiles","inputRef","handleDragOver","event","preventDefault","handleDrop","dataTransfer","handleFileChange","target","handleUpload","formData","FormData","i","length","append","fetch","method","body","then","response","json","data","console","log","catch","error","className","children","Array","from","map","file","idx","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDragOver","onDrop","type","multiple","onChange","hidden","accept","ref","current","click","_c","$RefreshReg$"],"sources":["D:/React programs/demo/src/DragDropFiles.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport \"./DROPFILE.css\";\r\n\r\nconst DragDropFiles = () => {\r\n  const [files, setFiles] = useState(null);\r\n  const inputRef = useRef();\r\n\r\n  const handleDragOver = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleDrop = (event) => {\r\n    event.preventDefault();\r\n    setFiles(event.dataTransfer.files);\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    setFiles(event.target.files);\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    if (files) {\r\n      const formData = new FormData();\r\n      for (let i = 0; i < files.length; i++) {\r\n        formData.append(\"Files\", files[i]);\r\n      }\r\n\r\n      // Replace \"YOUR_SERVER_ENDPOINT\" with your actual server endpoint\r\n      fetch(\"YOUR_SERVER_ENDPOINT\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(\"Upload successful:\", data);\r\n          // Handle any further actions after successful upload\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error uploading files:\", error);\r\n          // Handle errors during upload\r\n        });\r\n    }\r\n  };\r\n\r\n  if (files) {\r\n    return (\r\n      <div className=\"uploads\">\r\n        <ul>\r\n          {Array.from(files).map((file, idx) => (\r\n            <li key={idx}>{file.name}</li>\r\n          ))}\r\n        </ul>\r\n        <div className=\"actions\">\r\n          <button onClick={() => setFiles(null)}>Cancel</button>\r\n          <button onClick={handleUpload}>Upload</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"dropzone\"\r\n        onDragOver={handleDragOver}\r\n        onDrop={handleDrop}\r\n      >\r\n        <h1>Drag and Drop Files to Upload</h1>\r\n        <h1>Or</h1>\r\n        <input\r\n          type=\"file\"\r\n          multiple\r\n          onChange={handleFileChange}\r\n          hidden\r\n          accept=\"image/png, image/jpeg\"\r\n          ref={inputRef}\r\n        />\r\n        <button onClick={() => inputRef.current.click()}>Select Files</button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragDropFiles;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}